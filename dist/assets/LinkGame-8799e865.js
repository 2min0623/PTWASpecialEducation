import{x as f,m as v,_ as P,r as p,o as r,c as l,a as L,t as y,b as u,w as C,F as w,k,q as M,u as G,s as O,j as m}from"./index-d6735393.js";import{_ as b}from"./_plugin-vue_export-helper-c27b6911.js";const A={name:"LinkGameV2",components:{"v-stage":f.Stage,"v-layer":f.Layer,"v-circle":f.Circle,"v-line":f.Line,ImageContainer:v(()=>P(()=>import("./ManualImageContainer-24550c16.js"),["assets/ManualImageContainer-24550c16.js","assets/get_assets-e179de71.js","assets/_plugin-vue_export-helper-c27b6911.js","assets/index-d6735393.js","assets/index-797b4968.css","assets/ManualImageContainer-493bf4d2.css"]))},props:{id:{type:String,required:!0},GameData:{type:Object,required:!0},GameConfig:{type:Object,required:!0}},data(){return{configStage:{width:610,height:100},ComponentConfig:[],ComponentPositionConfig:{},DotLocation:[],LineWidth:2,IndexInfo:null,MiniGap:20,Lines:[],LinkedPoints:[],OnDrawingLine:{points:[],stroke:"black",strokeWidth:2,lineCap:"round",lineJoin:"round"},OnDrawing:!1,IndexMappingTable:[],MouseDownDotIndex:null,NotFinished:!1}},mounted(){this.IndexInfo=this.$refs.Index.getBoundingClientRect(),this.Init(),window.addEventListener("resize",this.Init),window.addEventListener("resize",this.ReLinktheLine)},created(){this.GameConfig.CheckingMode==null&&(this.GameConfig.CheckingMode="OnSubmit")},beforeDestroy(){window.removeEventListener("resize",this.Init),window.removeEventListener("resize",this.ReLinktheLine)},methods:{MouseDown(s,e){let t=this.CheckLined(e);t[0]&&(this.Lines.splice(t[1],1),this.LinkedPoints.splice(t[1],1),this.$refs.LineLayer.getNode().draw()),this.NotFinished=!1;const n=s.target.getStage().getPointerPosition();this.OnDrawing=!0,this.MouseDownDotIndex=e,this.OnDrawingLine={points:[n.x,n.y,n.x,n.y],stroke:"black",strokeWidth:this.LineWidth,lineCap:"round",lineJoin:"round"}},MouseMove(s){if(this.OnDrawing){const e=s.target.getStage().getPointerPosition();this.OnDrawingLine.points.splice(2,2,e.x,e.y),this.$refs.OnDrawLineLayer.getNode().draw()}},MouseUpAtDot(s){if(this.OnDrawing){const e=s.target.getStage().getPointerPosition();this.OnDrawingLine.points.splice(2,2,e.x,e.y);let t=this.CheckMouseAtTheDot(e.x,e.y);if(t!=!1&&this.CheckLinkAble(this.MouseDownDotIndex,t)){let i=null;if(this.GameConfig.CheckingMode=="OnAnswered"?i=this.CheckAnswerisCorrect(this.MouseDownDotIndex,t):i=!0,i){this.OnDrawingLine.points.splice(2,2,this.DotLocation[t].X,this.DotLocation[t].Y),this.Lines.push({...this.OnDrawingLine}),this.OnDrawing=!1,this.OnDrawingLine={points:[],stroke:"black",strokeWidth:2,lineCap:"round",lineJoin:"round"},this.$refs.LineLayer.getNode().draw(),this.$refs.OnDrawLineLayer.getNode().draw(),this.LinkedPoints.push([this.MouseDownDotIndex,t]),this.GameConfig.CheckingMode=="OnAnswered"&&this.CheckAllAnswered();return}}this.OnDrawing=!1,this.OnDrawingLine={points:[],stroke:"black",strokeWidth:2,lineCap:"round",lineJoin:"round"},this.$refs.OnDrawLineLayer.getNode().draw()}},CheckMouseAtTheDot(s,e){for(var t in this.DotLocation){let n=this.DotLocation[t],i=10;if(s>n.X-i&&s<n.X+i&&e>n.Y-i&&e<n.Y+i)return parseInt(t)}return!1},MappingDotIndexToAnswerIndex(s){return this.IndexMappingTable[s]},CheckLinkAble(s,e){let t=this.MappingDotIndexToAnswerIndex(s)[0],n=this.MappingDotIndexToAnswerIndex(e)[0];return t!=n},CheckAnswerisCorrect(s,e){let t=this.GameData.Answer,n=this.MappingDotIndexToAnswerIndex(s),i=this.MappingDotIndexToAnswerIndex(e);console.log(n,i);for(var o in t){if(t[o][0][0]==n[0]&&t[o][0][1]==n[1]&&t[o][1][0]==i[0]&&t[o][1][1]==i[1])return this.GameConfig.CheckingMode=="OnSubmit"||(this.$emit("play-effect","CorrectSound"),this.$emit("add-record",[this.GameData.Answer,[n,i],"正確"])),!0;if(t[o][0][0]==i[0]&&t[o][0][1]==i[1]&&t[o][1][0]==n[0]&&t[o][1][1]==n[1])return this.GameConfig.CheckingMode=="OnSubmit"||(this.$emit("play-effect","CorrectSound"),this.$emit("add-record",[this.GameData.Answer,[n,i],"正確"])),!0}return this.GameConfig.CheckingMode=="OnSubmit"||(this.$emit("play-effect","WrongSound"),this.$emit("add-record",[this.GameData.Answer,[n,i],"錯誤"])),!1},MarkWrongLine(s){this.Lines[s].stroke="green",this.$refs.LineLayer.getNode().draw()},ClearAllLine(){this.Lines=[],this.LinkedPoints=[],this.$refs.LineLayer.getNode().draw()},PopLastLine(){this.Lines.pop(),this.LinkedPoints.pop(),this.$refs.LineLayer.getNode().draw()},CheckAllAnswered(){this.LinkedPoints.length==this.GameData.Answer.length&&this.$emit("next-question")},CheckAll(){let s=0;if(this.LinkedPoints.length!=this.GameData.Answer.length){this.$emit("play-effect","WrongSound"),this.NotFinished=!0;return}for(var e in this.LinkedPoints){let t=this.LinkedPoints[e][0],n=this.LinkedPoints[e][1];this.GameData.Answer[e],this.CheckAnswerisCorrect(t,n)?s+=1:this.MarkWrongLine(e)}s==this.GameData.Answer.length?(this.$emit("play-effect","CorrectSound"),this.$emit("add-record",[this.GameData.Answer,this.LinkedPoints,"正確"]),this.$emit("next-question")):(this.$emit("play-effect","WrongSound"),this.$emit("add-record",[this.GameData.Answer,this.LinkedPoints,"錯誤"]))},CheckLined(s){for(var e in this.LinkedPoints)if(this.LinkedPoints[e][0]==s||this.LinkedPoints[e][1]==s)return[!0,e];return[!1]},ReLinktheLine(){this.Lines=[];for(var s in this.LinkedPoints){let e=this.LinkedPoints[s][0],t=this.LinkedPoints[s][1];this.OnDrawingLine.points=[this.DotLocation[e].X,this.DotLocation[e].Y,this.DotLocation[t].X,this.DotLocation[t].Y],this.Lines.push({...this.OnDrawingLine})}},Init(){let e=this.$refs.KonvaContainer.getBoundingClientRect();this.configStage.width=e.width,this.configStage.height=e.height;let t=this.GameData.Question.RowData.length;this.ComponentPositionConfig.ObjectWidth=e.width/(t*2+(t-1)*3)*2,this.ComponentPositionConfig.BlankWidth=e.width/(t*2+(t-1)*3)*3;let n=0,i=0;this.DotLocation=[],this.IndexMappingTable=[],this.ComponentConfig=[];for(var o in this.GameData.Question.RowData){let c=this.GameData.Question.RowData[o].length;this.ComponentPositionConfig.ObjectHeight=(e.height-this.MiniGap*(c+1))/c;let h=this.MiniGap;for(var d in this.GameData.Question.RowData[o]){let g={};g.X=n,g.Y=h,g.Name=this.GameData.Question.RowData[o][d].Name,g.Data=this.GameData.Question.RowData[o][d].Data,o!=0&&o!=this.GameData.Question.RowData.length-1?(this.IndexMappingTable.push([parseInt(i+1),parseInt(d)]),this.DotLocation.push({X:n+this.ComponentPositionConfig.ObjectWidth+this.MiniGap,Y:h+this.ComponentPositionConfig.ObjectHeight/2}),this.IndexMappingTable.push([parseInt(i),parseInt(d)]),this.DotLocation.push({X:n-this.MiniGap,Y:h+this.ComponentPositionConfig.ObjectHeight/2})):o==0?(this.IndexMappingTable.push([parseInt(i),parseInt(d)]),this.DotLocation.push({X:n+this.ComponentPositionConfig.ObjectWidth+this.MiniGap,Y:h+this.ComponentPositionConfig.ObjectHeight/2})):o==this.GameData.Question.RowData.length-1&&(this.IndexMappingTable.push([parseInt(i),parseInt(d)]),this.DotLocation.push({X:n-this.MiniGap,Y:h+this.ComponentPositionConfig.ObjectHeight/2})),h+=this.ComponentPositionConfig.ObjectHeight+this.MiniGap,this.ComponentConfig.push(g)}n+=this.ComponentPositionConfig.ObjectWidth+this.ComponentPositionConfig.BlankWidth,o!=0&&o!=this.GameData.Question.RowData.length-1?i+=2:i+=1}}}},x={class:"Container"},S={class:"h1"},I={class:"Index",ref:"Index"},N={class:"Konva-container",ref:"KonvaContainer"},W={class:"Buttons"},R={key:0};function T(s,e,t,n,i,o){const d=p("v-circle"),c=p("v-layer"),h=p("v-line"),g=p("v-stage");return r(),l("div",x,[L("p",S,y(t.GameData.Question.text),1),L("div",I,[L("div",N,[u(g,{config:i.configStage,class:"Stage",onMousemove:o.MouseMove,onMouseup:o.MouseUpAtDot},{default:C(()=>[u(c,null,{default:C(()=>[(r(!0),l(w,null,k(i.DotLocation,(a,D)=>(r(),M(d,{onMousedown:_=>{o.MouseDown(_,D)},key:D,config:{x:a.X,y:a.Y,radius:5,fill:"black"}},null,8,["onMousedown","config"]))),128))]),_:1}),u(c,{ref:"LineLayer"},{default:C(()=>[(r(!0),l(w,null,k(i.Lines,a=>(r(),M(h,{config:a},null,8,["config"]))),256))]),_:1},512),u(c,{ref:"OnDrawLineLayer"},{default:C(()=>[u(h,{config:i.OnDrawingLine},null,8,["config"])]),_:1},512)]),_:1},8,["config","onMousemove","onMouseup"])],512),(r(!0),l(w,null,k(i.ComponentConfig,(a,D)=>(r(),l("div",{class:"ObjectContainer",ref_for:!0,ref:"ObjectContainer",style:G({position:"absolute",top:a.Y+"px",left:a.X+"px",width:this.ComponentPositionConfig.ObjectWidth+"px",height:this.ComponentPositionConfig.ObjectHeight+"px"})},[(r(),M(O(a.Name),{Data:a.Data,ID:this.id,class:"Component",key:i.ComponentConfig},null,8,["Data","ID"]))],4))),256))],512),L("div",W,[i.NotFinished?(r(),l("h3",R,"請連完所有的線段")):m("",!0),this.GameConfig.CheckingMode=="OnSubmit"?(r(),l("button",{key:1,onClick:e[0]||(e[0]=(...a)=>o.CheckAll&&o.CheckAll(...a))},"檢查答案")):m("",!0),this.GameConfig.CheckingMode=="OnSubmit"?(r(),l("button",{key:2,onClick:e[1]||(e[1]=(...a)=>o.ClearAllLine&&o.ClearAllLine(...a))},"清除所有線")):m("",!0),this.GameConfig.CheckingMode=="OnSubmit"?(r(),l("button",{key:3,onClick:e[2]||(e[2]=(...a)=>o.PopLastLine&&o.PopLastLine(...a))},"刪除最後一條線")):m("",!0)])])}const Y=b(A,[["render",T],["__scopeId","data-v-afc803e8"]]);export{Y as default};
